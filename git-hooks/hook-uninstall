#!/usr/bin/env bash

ERR_MISSING_INSTALL_TARGET=1
ERR_GIT_DIR_NOT_FOUND=2
ERR_RUNNER_MISSING=4
ERR_TARGET_NOT_FOUND=5

err_exit()
{
    local MSG="$2"
    local EXIT_CODE="$1"

    if [ "x$MSG" != "x" ]; then
        if [ "0" != "${EXIT_CODE}" ]; then
            MSG="Error: ${MSG}"
        fi

        echo "$(basename $0): $MSG" >&2
    fi

    exit $EXIT_CODE
}

BASEDIR=$(pwd)
GITDIR="${BASEDIR}/.git"
HOOKDIR="${GITDIR}/hooks"
HOOKRUNNER="${BASEDIR}/git-hooks/hook-runner"

if [ ! -d "${GITDIR}" ]; then
    err_exit $ERR_GIT_DIR_NOT_FOUND ".git directory not found: ${GITDIR}"
fi

# No hook dir, no hooks to uninstall
if [ ! -d "${HOOKDIR}" ]; then
    err_exit 0 "$(basename $0): No hook dir, nothing to do"
fi

if [ ! -f "${HOOKRUNNER}" ]; then
    err_exit $ERR_RUNNER_MISSING "hook runner missing: ${HOOKRUNNER}"
fi

FIND_NAME_MASK='*'
UNINSTALL_TARGET="$1"
EXPLICIT_TARGET=""

if [ "x" != "x${UNINSTALL_TARGET}" -a "all" != "${UNINSTALL_TARGET}" ]; then
    EXPLICIT_TARGET="yes"
    FIND_NAME_MASK="${UNINSTALL_TARGET}"
fi

CANDIDATES=$(find $HOOKDIR -type l -name "${FIND_NAME_MASK}")

if [ "yes" = "$EXPLICIT_TARGET" -a -z "$CANDIDATES" ]; then
    err_exit $ERR_TARGET_NOT_FOUND "Unhook failed, hook not found: ${UNINSTALL_TARGET}"
fi

for CANDIDATE in $CANDIDATES; do
    if [ -L "${CANDIDATE}" -a "$(readlink $CANDIDATE)" == "${HOOKRUNNER}" ]; then
        rm "${CANDIDATE}"
        echo "Uninstalled $(basename $CANDIDATE)"
    fi
done
