#!/usr/bin/env bash

ERR_HOOK_SCRIPTS_DIR_NOT_FOUND=1
ERR_GIT_DIR_NOT_FOUND=2
ERR_GIT_HOOK_NOT_FOUND=3

err_exit()
{
    local MSG="$2"
    local EXIT_CODE="$1"

    if [ "x$MSG" != "x" ]; then
        if [ "0" != "${EXIT_CODE}" ]; then
            MSG="Error: ${MSG}"
        fi

        echo "$(basename $0): $MSG" >&2
    fi

    exit $EXIT_CODE
}

if [ -z $GIT_DIR ]; then
    GIT_DIR=$(pwd)/.git
fi

if [ ! -d $GIT_DIR ]; then
    err_exit $ERR_GIT_DIR_NOT_FOUND "Git dir not found: ${GIT_DIR}"
fi

HOOK_NAME=$(basename $0)
HOOK_SCRIPTS_DIR="$(dirname $GIT_DIR)/git-hooks"
HOOK_SCRIPT="${HOOK_SCRIPTS_DIR}/${HOOK_NAME}"

GIT_HOOKS_DIR="$(pwd)/${GIT_DIR}/hooks"

if [ ! -d "$HOOK_SCRIPTS_DIR" ]; then
    err_exit $ERR_HOOK_SCRIPTS_DIR_NOT_FOUND "git-hooks dir not found: ${HOOK_SCRIPTS_DIR}"
fi

if [ ! -f "$HOOK_SCRIPT" ]; then
    err_exit $ERR_GIT_HOOK_NOT_FOUND "hook script ${HOOK_NAME} not found"
fi

$HOOK_SCRIPT "$@" || exit $?

SIBLING_HOOKS=$(find ${GIT_DIR}/hooks -name "${HOOK_NAME}.*" -print)

for HOOK in $SIBLING_HOOKS; do
    if [ -x $HOOK ]; then
        $HOOK "$@" || exit $?
    fi
done
